//------------------------------------------------------------------------------
// <auto-generated>
//     Questo codice è stato generato da uno strumento.
//
//     Le modifiche apportate a questo file possono causare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceMonetaVirtuale
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ecocontrolgsm.cloud/", ConfigurationName="ServiceReference1.MonetaVirtualeSoap")]
    public interface MonetaVirtualeSoap
    {
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio CreaQRCodeMonetaVirtualeRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/CreaQRCodeMonetaVirtuale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeResponse CreaQRCodeMonetaVirtuale(ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/CreaQRCodeMonetaVirtuale", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeResponse> CreaQRCodeMonetaVirtualeAsync(ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest request);
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio TestLoginRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/TestLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.TestLoginResponse TestLogin(ServiceMonetaVirtuale.TestLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/TestLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.TestLoginResponse> TestLoginAsync(ServiceMonetaVirtuale.TestLoginRequest request);
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio MonetaVirtualeCaricaRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeCarica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.MonetaVirtualeCaricaResponse MonetaVirtualeCarica(ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeCarica", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeCaricaResponse> MonetaVirtualeCaricaAsync(ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest request);
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio MonetaVirtualeScaricaRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeScarica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.MonetaVirtualeScaricaResponse MonetaVirtualeScarica(ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeScarica", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeScaricaResponse> MonetaVirtualeScaricaAsync(ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest request);
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio MonetaVirtualeVisualizzaCreditoRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeVisualizzaCredito", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoResponse MonetaVirtualeVisualizzaCredito(ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeVisualizzaCredito", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoResponse> MonetaVirtualeVisualizzaCreditoAsync(ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest request);
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio MonetaVirtualeEliminaRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeElimina", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.MonetaVirtualeEliminaResponse MonetaVirtualeElimina(ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeElimina", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeEliminaResponse> MonetaVirtualeEliminaAsync(ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest request);
        
        // CODEGEN: Verrà generato il contratto di messaggio perché il messaggio MonetaVirtualeAggiornaSaldoDaConferimentiRequest contiene intestazioni
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeAggiornaSaldoDaConferimenti", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiResponse MonetaVirtualeAggiornaSaldoDaConferimenti(ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ecocontrolgsm.cloud/MonetaVirtualeAggiornaSaldoDaConferimenti", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiResponse> MonetaVirtualeAggiornaSaldoDaConferimentiAsync(ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ecocontrolgsm.cloud/")]
    public partial class HeaderAuth
    {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ecocontrolgsm.cloud/")]
    public partial class ResponseCreaQrCodeMonetaVirtuale
    {
        
        private string qrCodeField;
        
        private long idGenerazioneField;
        
        private string erroreStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string QrCode
        {
            get
            {
                return this.qrCodeField;
            }
            set
            {
                this.qrCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long IdGenerazione
        {
            get
            {
                return this.idGenerazioneField;
            }
            set
            {
                this.idGenerazioneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErroreString
        {
            get
            {
                return this.erroreStringField;
            }
            set
            {
                this.erroreStringField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreaQRCodeMonetaVirtuale", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class CreaQRCodeMonetaVirtualeRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string Paese;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=1)]
        public string IdentificativoBidone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=2)]
        public int ImportoInCentesimi;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=3)]
        public string CodiceFiscale;
        
        public CreaQRCodeMonetaVirtualeRequest()
        {
        }
        
        public CreaQRCodeMonetaVirtualeRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string Paese, string IdentificativoBidone, int ImportoInCentesimi, string CodiceFiscale)
        {
            this.HeaderAuth = HeaderAuth;
            this.Paese = Paese;
            this.IdentificativoBidone = IdentificativoBidone;
            this.ImportoInCentesimi = ImportoInCentesimi;
            this.CodiceFiscale = CodiceFiscale;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreaQRCodeMonetaVirtualeResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class CreaQRCodeMonetaVirtualeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public ServiceMonetaVirtuale.ResponseCreaQrCodeMonetaVirtuale CreaQRCodeMonetaVirtualeResult;
        
        public CreaQRCodeMonetaVirtualeResponse()
        {
        }
        
        public CreaQRCodeMonetaVirtualeResponse(ServiceMonetaVirtuale.ResponseCreaQrCodeMonetaVirtuale CreaQRCodeMonetaVirtualeResult)
        {
            this.CreaQRCodeMonetaVirtualeResult = CreaQRCodeMonetaVirtualeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestLogin", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class TestLoginRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        public TestLoginRequest()
        {
        }
        
        public TestLoginRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth)
        {
            this.HeaderAuth = HeaderAuth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestLoginResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class TestLoginResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string TestLoginResult;
        
        public TestLoginResponse()
        {
        }
        
        public TestLoginResponse(string TestLoginResult)
        {
            this.TestLoginResult = TestLoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeCarica", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeCaricaRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string QrCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=1)]
        public int ImportoInCentesimi;
        
        public MonetaVirtualeCaricaRequest()
        {
        }
        
        public MonetaVirtualeCaricaRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode, int ImportoInCentesimi)
        {
            this.HeaderAuth = HeaderAuth;
            this.QrCode = QrCode;
            this.ImportoInCentesimi = ImportoInCentesimi;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeCaricaResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeCaricaResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string MonetaVirtualeCaricaResult;
        
        public MonetaVirtualeCaricaResponse()
        {
        }
        
        public MonetaVirtualeCaricaResponse(string MonetaVirtualeCaricaResult)
        {
            this.MonetaVirtualeCaricaResult = MonetaVirtualeCaricaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeScarica", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeScaricaRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string QrCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=1)]
        public int ImportoInCentesimi;
        
        public MonetaVirtualeScaricaRequest()
        {
        }
        
        public MonetaVirtualeScaricaRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode, int ImportoInCentesimi)
        {
            this.HeaderAuth = HeaderAuth;
            this.QrCode = QrCode;
            this.ImportoInCentesimi = ImportoInCentesimi;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeScaricaResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeScaricaResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string MonetaVirtualeScaricaResult;
        
        public MonetaVirtualeScaricaResponse()
        {
        }
        
        public MonetaVirtualeScaricaResponse(string MonetaVirtualeScaricaResult)
        {
            this.MonetaVirtualeScaricaResult = MonetaVirtualeScaricaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeVisualizzaCredito", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeVisualizzaCreditoRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string QrCode;
        
        public MonetaVirtualeVisualizzaCreditoRequest()
        {
        }
        
        public MonetaVirtualeVisualizzaCreditoRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            this.HeaderAuth = HeaderAuth;
            this.QrCode = QrCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeVisualizzaCreditoResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeVisualizzaCreditoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string MonetaVirtualeVisualizzaCreditoResult;
        
        public MonetaVirtualeVisualizzaCreditoResponse()
        {
        }
        
        public MonetaVirtualeVisualizzaCreditoResponse(string MonetaVirtualeVisualizzaCreditoResult)
        {
            this.MonetaVirtualeVisualizzaCreditoResult = MonetaVirtualeVisualizzaCreditoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeElimina", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeEliminaRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string QrCode;
        
        public MonetaVirtualeEliminaRequest()
        {
        }
        
        public MonetaVirtualeEliminaRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            this.HeaderAuth = HeaderAuth;
            this.QrCode = QrCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeEliminaResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeEliminaResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string MonetaVirtualeEliminaResult;
        
        public MonetaVirtualeEliminaResponse()
        {
        }
        
        public MonetaVirtualeEliminaResponse(string MonetaVirtualeEliminaResult)
        {
            this.MonetaVirtualeEliminaResult = MonetaVirtualeEliminaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeAggiornaSaldoDaConferimenti", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeAggiornaSaldoDaConferimentiRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ecocontrolgsm.cloud/")]
        public ServiceMonetaVirtuale.HeaderAuth HeaderAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public string QrCode;
        
        public MonetaVirtualeAggiornaSaldoDaConferimentiRequest()
        {
        }
        
        public MonetaVirtualeAggiornaSaldoDaConferimentiRequest(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            this.HeaderAuth = HeaderAuth;
            this.QrCode = QrCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MonetaVirtualeAggiornaSaldoDaConferimentiResponse", WrapperNamespace="http://ecocontrolgsm.cloud/", IsWrapped=true)]
    public partial class MonetaVirtualeAggiornaSaldoDaConferimentiResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ecocontrolgsm.cloud/", Order=0)]
        public int MonetaVirtualeAggiornaSaldoDaConferimentiResult;
        
        public MonetaVirtualeAggiornaSaldoDaConferimentiResponse()
        {
        }
        
        public MonetaVirtualeAggiornaSaldoDaConferimentiResponse(int MonetaVirtualeAggiornaSaldoDaConferimentiResult)
        {
            this.MonetaVirtualeAggiornaSaldoDaConferimentiResult = MonetaVirtualeAggiornaSaldoDaConferimentiResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface MonetaVirtualeSoapChannel : ServiceMonetaVirtuale.MonetaVirtualeSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MonetaVirtualeSoapClient : System.ServiceModel.ClientBase<ServiceMonetaVirtuale.MonetaVirtualeSoap>, ServiceMonetaVirtuale.MonetaVirtualeSoap
    {
        
        /// <summary>
        /// Implementare questo metodo parziale per configurare l'endpoint servizio.
        /// </summary>
        /// <param name="serviceEndpoint">Endpoint da configurare</param>
        /// <param name="clientCredentials">Credenziali del client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MonetaVirtualeSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(MonetaVirtualeSoapClient.GetBindingForEndpoint(endpointConfiguration), MonetaVirtualeSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MonetaVirtualeSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MonetaVirtualeSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MonetaVirtualeSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MonetaVirtualeSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MonetaVirtualeSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.CreaQRCodeMonetaVirtuale(ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest request)
        {
            return base.Channel.CreaQRCodeMonetaVirtuale(request);
        }
        
        public ServiceMonetaVirtuale.ResponseCreaQrCodeMonetaVirtuale CreaQRCodeMonetaVirtuale(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string Paese, string IdentificativoBidone, int ImportoInCentesimi, string CodiceFiscale)
        {
            ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest inValue = new ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.Paese = Paese;
            inValue.IdentificativoBidone = IdentificativoBidone;
            inValue.ImportoInCentesimi = ImportoInCentesimi;
            inValue.CodiceFiscale = CodiceFiscale;
            ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).CreaQRCodeMonetaVirtuale(inValue);
            return retVal.CreaQRCodeMonetaVirtualeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.CreaQRCodeMonetaVirtualeAsync(ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest request)
        {
            return base.Channel.CreaQRCodeMonetaVirtualeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeResponse> CreaQRCodeMonetaVirtualeAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string Paese, string IdentificativoBidone, int ImportoInCentesimi, string CodiceFiscale)
        {
            ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest inValue = new ServiceMonetaVirtuale.CreaQRCodeMonetaVirtualeRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.Paese = Paese;
            inValue.IdentificativoBidone = IdentificativoBidone;
            inValue.ImportoInCentesimi = ImportoInCentesimi;
            inValue.CodiceFiscale = CodiceFiscale;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).CreaQRCodeMonetaVirtualeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.TestLoginResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.TestLogin(ServiceMonetaVirtuale.TestLoginRequest request)
        {
            return base.Channel.TestLogin(request);
        }
        
        public string TestLogin(ServiceMonetaVirtuale.HeaderAuth HeaderAuth)
        {
            ServiceMonetaVirtuale.TestLoginRequest inValue = new ServiceMonetaVirtuale.TestLoginRequest();
            inValue.HeaderAuth = HeaderAuth;
            ServiceMonetaVirtuale.TestLoginResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).TestLogin(inValue);
            return retVal.TestLoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.TestLoginResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.TestLoginAsync(ServiceMonetaVirtuale.TestLoginRequest request)
        {
            return base.Channel.TestLoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.TestLoginResponse> TestLoginAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth)
        {
            ServiceMonetaVirtuale.TestLoginRequest inValue = new ServiceMonetaVirtuale.TestLoginRequest();
            inValue.HeaderAuth = HeaderAuth;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).TestLoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.MonetaVirtualeCaricaResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeCarica(ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest request)
        {
            return base.Channel.MonetaVirtualeCarica(request);
        }
        
        public string MonetaVirtualeCarica(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode, int ImportoInCentesimi)
        {
            ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            inValue.ImportoInCentesimi = ImportoInCentesimi;
            ServiceMonetaVirtuale.MonetaVirtualeCaricaResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeCarica(inValue);
            return retVal.MonetaVirtualeCaricaResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeCaricaResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeCaricaAsync(ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest request)
        {
            return base.Channel.MonetaVirtualeCaricaAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeCaricaResponse> MonetaVirtualeCaricaAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode, int ImportoInCentesimi)
        {
            ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeCaricaRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            inValue.ImportoInCentesimi = ImportoInCentesimi;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeCaricaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.MonetaVirtualeScaricaResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeScarica(ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest request)
        {
            return base.Channel.MonetaVirtualeScarica(request);
        }
        
        public string MonetaVirtualeScarica(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode, int ImportoInCentesimi)
        {
            ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            inValue.ImportoInCentesimi = ImportoInCentesimi;
            ServiceMonetaVirtuale.MonetaVirtualeScaricaResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeScarica(inValue);
            return retVal.MonetaVirtualeScaricaResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeScaricaResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeScaricaAsync(ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest request)
        {
            return base.Channel.MonetaVirtualeScaricaAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeScaricaResponse> MonetaVirtualeScaricaAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode, int ImportoInCentesimi)
        {
            ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeScaricaRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            inValue.ImportoInCentesimi = ImportoInCentesimi;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeScaricaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeVisualizzaCredito(ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest request)
        {
            return base.Channel.MonetaVirtualeVisualizzaCredito(request);
        }
        
        public string MonetaVirtualeVisualizzaCredito(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeVisualizzaCredito(inValue);
            return retVal.MonetaVirtualeVisualizzaCreditoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeVisualizzaCreditoAsync(ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest request)
        {
            return base.Channel.MonetaVirtualeVisualizzaCreditoAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoResponse> MonetaVirtualeVisualizzaCreditoAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeVisualizzaCreditoRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeVisualizzaCreditoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.MonetaVirtualeEliminaResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeElimina(ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest request)
        {
            return base.Channel.MonetaVirtualeElimina(request);
        }
        
        public string MonetaVirtualeElimina(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            ServiceMonetaVirtuale.MonetaVirtualeEliminaResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeElimina(inValue);
            return retVal.MonetaVirtualeEliminaResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeEliminaResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeEliminaAsync(ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest request)
        {
            return base.Channel.MonetaVirtualeEliminaAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeEliminaResponse> MonetaVirtualeEliminaAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeEliminaRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeEliminaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiResponse ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeAggiornaSaldoDaConferimenti(ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest request)
        {
            return base.Channel.MonetaVirtualeAggiornaSaldoDaConferimenti(request);
        }
        
        public int MonetaVirtualeAggiornaSaldoDaConferimenti(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiResponse retVal = ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeAggiornaSaldoDaConferimenti(inValue);
            return retVal.MonetaVirtualeAggiornaSaldoDaConferimentiResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiResponse> ServiceMonetaVirtuale.MonetaVirtualeSoap.MonetaVirtualeAggiornaSaldoDaConferimentiAsync(ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest request)
        {
            return base.Channel.MonetaVirtualeAggiornaSaldoDaConferimentiAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiResponse> MonetaVirtualeAggiornaSaldoDaConferimentiAsync(ServiceMonetaVirtuale.HeaderAuth HeaderAuth, string QrCode)
        {
            ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest inValue = new ServiceMonetaVirtuale.MonetaVirtualeAggiornaSaldoDaConferimentiRequest();
            inValue.HeaderAuth = HeaderAuth;
            inValue.QrCode = QrCode;
            return ((ServiceMonetaVirtuale.MonetaVirtualeSoap)(this)).MonetaVirtualeAggiornaSaldoDaConferimentiAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MonetaVirtualeSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.MonetaVirtualeSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("L\'endpoint denominato \'{0}\' non è stato trovato.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MonetaVirtualeSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://185.58.119.77/webservice/monetavirtuale/monetavirtuale.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.MonetaVirtualeSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://185.58.119.77/webservice/monetavirtuale/monetavirtuale.asmx");
            }
            throw new System.InvalidOperationException(string.Format("L\'endpoint denominato \'{0}\' non è stato trovato.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            MonetaVirtualeSoap,
            
            MonetaVirtualeSoap12,
        }
    }
}
